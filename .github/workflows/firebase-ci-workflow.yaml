name: Deploy Cloud functions
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize

jobs:
  build:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Repo HEAD
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Dependencies
        run: |
          npm install
          cd functions
          npm install

      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: project-root-folder
          path: .*

  deploy:
    name: Run Firebase Tasks
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Fetch Repo HEAD
        uses: actions/checkout@master

      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: project-root-folder
          path: .*

      - name: Deploy Functions
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only functions:app,hosting:token-gen
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  bump-version:
    name: Version bump manager
    needs: deploy
    runs-on: ubuntu-latest
    env:
      APP_NAME: "IBOM Token Generator"
      RELEASE_TYPE: patch
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Fetch Repo HEAD
        uses: actions/checkout@master

      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: project-root-folder
          path: .*

      - name: Bump version and push tag
        id: bump_tag
        uses: mathieudutour/github-tag-action@v4.5
        with:
          release_branches: .*
          github_token: ${{ env.GITHUB_TOKEN }}

      - name: Push new version to Release Tags
        uses: ncipollo/release-action@v1
        with:
          name: ${{ env.APP_NAME }}-${{ steps.bump_tag.outputs.new_version }}
          tag: ${{ steps.bump_tag.outputs.new_tag }}
          token: ${{ env.GITHUB_TOKEN }}
          body: A new release of ${{ env.APP_NAME }} is available!
          allowUpdates: false
          omitName: false
          omitBody: false
